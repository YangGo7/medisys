version: '3.8'

services:
  # OpenMRS MySQL
  openmrs-mysql:
    image: mysql:8.0
    container_name: openmrs-mysql
    hostname: openmrs-mysql
    environment:
      MYSQL_ROOT_PASSWORD: Admin123
      MYSQL_DATABASE: openmrs
      MYSQL_USER: openmrs
      MYSQL_PASSWORD: Admin123
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    ports:
      - "3307:3306"
    volumes:
      - openmrs_mysql_data:/var/lib/mysql
    networks:
      - medical-network
    restart: unless-stopped

  # OpenMRS Web Application
  openmrs-server:
    image: openmrs/openmrs-reference-application-distro:latest
    container_name: openmrs-server
    hostname: openmrs-server
    depends_on:
      - openmrs-mysql
    environment:
      DB_DATABASE: openmrs
      DB_HOST: openmrs-mysql
      DB_PORT: 3306
      DB_USERNAME: openmrs
      DB_PASSWORD: Admin123
      DB_CREATE_TABLES: "true"
      DB_AUTO_UPDATE: "true"
      MODULE_WEB_ADMIN: "true"
    ports:
      - "8082:8080"
    volumes:
      - openmrs_data:/openmrs/data
    networks:
      - medical-network
    restart: unless-stopped

  # MariaDB (메인 애플리케이션용)
  mariadb:
    image: mariadb:10.11
    container_name: mariadb-server
    hostname: mariadb-server
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: medical_platform
      MYSQL_USER: medical_user
      MYSQL_PASSWORD: medical_password
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - medical-network
    restart: unless-stopped

  # PostgreSQL (Orthanc용)
  orthanc-postgres:
    image: postgres:14
    container_name: orthanc-postgres
    hostname: orthanc-postgres
    environment:
      POSTGRES_DB: orthanc
      POSTGRES_USER: orthanc
      POSTGRES_PASSWORD: orthanc
    ports:
      - "5432:5432"
    volumes:
      - orthanc_postgres_data:/var/lib/postgresql/data
    networks:
      - medical-network
    restart: unless-stopped

  # Orthanc + PostgreSQL + DICOMWeb
  # jodogne/orthanc-prugin:1.12.6
  orthanc:
    image: jodogne/orthanc-python:1.12.6
    container_name: orthanc
    hostname: orthanc-server
    depends_on:
      - orthanc-postgres
    ports:
      - "8042:8042"
      - "4242:4242"
    volumes:
      - orthanc_data:/var/lib/orthanc/db
      - ./orthanc-config/orthanc.json:/etc/orthanc/orthanc.json
      - ./scripts:/scripts
    environment:
      ORTHANC__PYTHON_SCRIPT: /scripts/entry.py  # JSON 파일로 지정해도 됨
    networks:
      - medical-network
    restart: unless-stopped

  # OHIF Viewer
  ohif-viewer:
    image: ohif/app:v3.9.2
    container_name: ohif-viewer
    hostname: ohif-viewer
    depends_on:
      - orthanc
    ports:
      - "3001:80"
    volumes:
      - ./ohif-config/app-config.js:/usr/share/nginx/html/app-config.js
    networks:
      - medical-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: mongodb-server
    hostname: mongodb-server
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
      MONGO_INITDB_DATABASE: medical_system
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - medical-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    hostname: phpmyadmin
    depends_on:
      - mariadb
    environment:
      PMA_HOST: mariadb-server
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    ports:
      - "8080:80"
    networks:
      - medical-network
    restart: unless-stopped

  # Mongo Express
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    hostname: mongo-express
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: adminpassword
      ME_CONFIG_MONGODB_SERVER: mongodb-server
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: webadmin
      ME_CONFIG_BASICAUTH_PASSWORD: webpassword
      ME_CONFIG_MONGODB_URL: mongodb://admin:adminpassword@mongodb-server:27017/
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_OPTIONS_EDITORTHEME: "ambiance"
    ports:
      - "8081:8081"
    networks:
      - medical-network
    restart: unless-stopped
    command: sh -c "sleep 10 && tini -- /docker-entrypoint.sh mongo-express"

  # NGINX 프록시 (Orthanc 우회용)
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "8088:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - orthanc
    networks:
      - medical-network
    restart: unless-stopped

networks:
  medical-network:
    driver: bridge

volumes:
  openmrs_mysql_data:
  openmrs_data:
  mariadb_data:
  orthanc_postgres_data:
  orthanc_data:
  mongodb_data:
