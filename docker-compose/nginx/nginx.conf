events {}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log warn;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  client_max_body_size 100M;

  ############################
  # HTTP 서버 (IP 기반 서비스)
  ############################
  server {
    listen 80;
    server_name 35.225.63.41;

    # React 정적 파일 서비스
    location / {
      root /usr/share/nginx/html;
      index index.html index.htm;
      try_files $uri $uri/ /index.html;
    }

    # Django API
    location /api/ {
      proxy_pass http://10.128.0.11:8000/;

      proxy_http_version 1.1;
      proxy_set_header Host 35.225.63.41;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      add_header 'Access-Control-Allow-Origin' 'http://35.225.63.41' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-CSRFToken, X-Requested-With' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Max-Age' 86400;

      if ($request_method = OPTIONS) {
        return 204;
      }
    }

    # DICOMWeb (Orthanc)
    location /dicom-web/ {
      proxy_pass http://orthanc:8042/dicom-web/;

      proxy_http_version 1.1;
      proxy_set_header Host 35.225.63.41;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      add_header 'Access-Control-Allow-Origin' 'http://35.225.63.41' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Max-Age' 86400;

      if ($request_method = OPTIONS) {
        return 204;
      }
    }

    # WADO URI (Orthanc legacy)
    location /wado {
      proxy_pass http://orthanc:8042/wado;

      proxy_set_header Host 35.225.63.41;
      proxy_set_header X-Forwarded-Proto http;

      add_header 'Access-Control-Allow-Origin' 'http://35.225.63.41' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Max-Age' 86400;

      if ($request_method = OPTIONS) {
        return 204;
      }
    }

    # Orthanc UI
    location /orthanc-ui/ {
      proxy_pass http://orthanc:8042/ui/app/;

      proxy_set_header Host 35.225.63.41;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Authorization "Basic b3J0aGFuYzpvcnRoYW5j"; # orthanc:orthanc

      add_header 'Access-Control-Allow-Origin' 'http://35.225.63.41' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Max-Age' 86400;

      if ($request_method = OPTIONS) {
        return 204;
      }
    }

    # AI 분석 서버 (Flask)
    location /ai-service/ {
      proxy_pass http://ai-service:5000/;

      proxy_http_version 1.1;
      proxy_set_header Host 35.225.63.41;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Max-Age' 86400;

      if ($request_method = OPTIONS) {
        return 204;
      }
    }

    # 인증서 갱신용
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
  }
}
