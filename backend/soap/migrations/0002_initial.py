# Generated by Django 4.2 on 2025-06-26 15:59

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('soap', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientVisitHistory',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_uuid', models.CharField(db_index=True, max_length=38)),
                ('visit_uuid', models.CharField(blank=True, help_text='OpenMRS Visit UUID', max_length=38, null=True)),
                ('encounter_uuid', models.CharField(blank=True, help_text='OpenMRS Encounter UUID', max_length=38, null=True)),
                ('visit_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('visit_type', models.CharField(default='OUTPATIENT', max_length=50)),
                ('status', models.CharField(choices=[('SCHEDULED', '예약됨'), ('ARRIVED', '도착'), ('IN_PROGRESS', '진료중'), ('COMPLETED', '완료'), ('CANCELLED', '취소'), ('NO_SHOW', '미출석')], default='SCHEDULED', max_length=20)),
                ('chief_complaint', models.TextField(blank=True, help_text='주요 증상', null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('doctor_uuid', models.CharField(blank=True, max_length=38, null=True)),
                ('primary_diagnosis', models.CharField(blank=True, max_length=255, null=True)),
                ('secondary_diagnoses', models.JSONField(blank=True, null=True)),
                ('prescriptions', models.JSONField(blank=True, null=True)),
                ('procedures', models.JSONField(blank=True, null=True)),
                ('imaging_studies', models.JSONField(blank=True, help_text='연관된 영상 검사 목록', null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '환자 내원 이력',
                'verbose_name_plural': '환자 내원 이력 목록',
                'db_table': 'medical_platform_patient_visit_history',
                'ordering': ['-visit_date'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SoapDiagnosis',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_uuid', models.CharField(db_index=True, help_text='OpenMRS Patient UUID', max_length=38)),
                ('encounter_uuid', models.CharField(db_index=True, help_text='OpenMRS Encounter UUID', max_length=38)),
                ('soap_type', models.CharField(choices=[('S', 'Subjective - 주관적 정보'), ('O', 'Objective - 객관적 정보'), ('A', 'Assessment - 평가/진단'), ('P', 'Plan - 치료계획')], max_length=1)),
                ('sequence_number', models.IntegerField(default=1, help_text='같은 SOAP 타입 내 순서')),
                ('diagnosis_type', models.CharField(blank=True, choices=[('PRIMARY', '주진단'), ('SECONDARY', '부진단'), ('PROVISIONAL', '잠정진단'), ('DIFFERENTIAL', '감별진단')], max_length=20, null=True)),
                ('icd10_code', models.CharField(blank=True, help_text='ICD-10 코드', max_length=10, null=True)),
                ('icd10_name', models.CharField(blank=True, help_text='ICD-10 진단명', max_length=255, null=True)),
                ('content', models.TextField(help_text='SOAP 상세 내용')),
                ('clinical_notes', models.TextField(blank=True, help_text='임상 메모', null=True)),
                ('concept_uuid', models.CharField(blank=True, help_text='OpenMRS Concept UUID', max_length=38, null=True)),
                ('obs_uuid', models.CharField(blank=True, help_text='저장된 OpenMRS Obs UUID', max_length=38, null=True)),
                ('study_instance_uid', models.CharField(blank=True, help_text='DICOM Study UID', max_length=255, null=True)),
                ('series_instance_uid', models.CharField(blank=True, help_text='DICOM Series UID', max_length=255, null=True)),
                ('image_annotations', models.JSONField(blank=True, help_text='영상 주석 정보', null=True)),
                ('doctor_uuid', models.CharField(help_text='진단한 의사 UUID', max_length=38)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'SOAP 진단',
                'verbose_name_plural': 'SOAP 진단 목록',
                'db_table': 'soap_diagnosis',
                'ordering': ['created_date', 'soap_type', 'sequence_number'],
                'managed': True,
            },
        ),
        migrations.AddIndex(
            model_name='soapdiagnosis',
            index=models.Index(fields=['patient_uuid', 'encounter_uuid'], name='idx_soap_patient_encounter'),
        ),
        migrations.AddIndex(
            model_name='soapdiagnosis',
            index=models.Index(fields=['icd10_code'], name='idx_soap_icd10'),
        ),
        migrations.AddIndex(
            model_name='soapdiagnosis',
            index=models.Index(fields=['soap_type', 'sequence_number'], name='idx_soap_type_seq'),
        ),
        migrations.AddIndex(
            model_name='soapdiagnosis',
            index=models.Index(fields=['doctor_uuid'], name='idx_soap_doctor'),
        ),
        migrations.AddIndex(
            model_name='soapdiagnosis',
            index=models.Index(fields=['created_date'], name='idx_soap_created'),
        ),
        migrations.AddIndex(
            model_name='patientvisithistory',
            index=models.Index(fields=['patient_uuid'], name='idx_visit_patient'),
        ),
        migrations.AddIndex(
            model_name='patientvisithistory',
            index=models.Index(fields=['visit_date'], name='idx_visit_date'),
        ),
        migrations.AddIndex(
            model_name='patientvisithistory',
            index=models.Index(fields=['encounter_uuid'], name='idx_visit_encounter'),
        ),
        migrations.AddIndex(
            model_name='patientvisithistory',
            index=models.Index(fields=['doctor_uuid'], name='idx_visit_doctor'),
        ),
    ]
